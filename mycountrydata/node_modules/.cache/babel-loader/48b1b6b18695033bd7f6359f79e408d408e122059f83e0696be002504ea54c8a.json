{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sachi\\\\Desktop\\\\Country\\\\mycountrydata\\\\src\\\\CountryInfo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n// const API_KEY=process.env.REACT_APP_WEATHER_API_KEY\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryInfo = () => {\n  _s();\n  var _countryData$capital2, _countryData$latlng, _countryData$flags;\n  const {\n    name\n  } = useParams();\n  const [countryData, setCountryData] = useState({});\n  const [weatherData, setWeatherData] = useState({});\n  const navigate = useNavigate();\n  const API_KEY = \"e3736c59809579a0c2080ae39ebc7d67\";\n  useEffect(() => {\n    const fetchCountryData = async () => {\n      try {\n        const response = await fetch(`https://restcountries.com/v3.1/name/${name}?fullText=true`);\n        const data = await response.json();\n        setCountryData(data[0]);\n        if (!response.ok) {\n          alert(\"Enter Correct Country Name OR Error Occured While Fetching Data\");\n          navigate(`/`);\n        }\n      } catch (error) {\n        console.error(\"Error fetching country data:\", error);\n      }\n    };\n    fetchCountryData();\n  }, [name, navigate]);\n  const fetchWeatherData = async () => {\n    try {\n      var _countryData$capital;\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${(_countryData$capital = countryData.capital) === null || _countryData$capital === void 0 ? void 0 : _countryData$capital[0]}&appid=${API_KEY}`);\n      setWeatherData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n    }\n  };\n  useEffect(() => {\n    console.log(\"countryData updated:\", countryData);\n    console.log(\"weatherData updated:\", weatherData);\n    console.log(\"Api KEys\", API_KEY);\n    if (countryData.latlng) {\n      fetchWeatherData();\n    }\n  }, [countryData]);\n  if (!countryData.name) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n  const renderWeatherData = () => {\n    var _weatherData$main, _weatherData$wind;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Weather Information:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Temperature:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), \" \", ((_weatherData$main = weatherData.main) === null || _weatherData$main === void 0 ? void 0 : _weatherData$main.temp) - 273.15, \" Celsius\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Wind Speed:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), \" \", (_weatherData$wind = weatherData.wind) === null || _weatherData$wind === void 0 ? void 0 : _weatherData$wind.speed, \" meter/sec\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome to the Country Data\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), \" \", countryData.name.common]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Capital:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), \" \", (_countryData$capital2 = countryData.capital) === null || _countryData$capital2 === void 0 ? void 0 : _countryData$capital2[0]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Population:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), \" \", countryData.population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Latitude/Longitude:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), \" \", (_countryData$latlng = countryData.latlng) === null || _countryData$latlng === void 0 ? void 0 : _countryData$latlng.join(\", \")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Flag:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: (_countryData$flags = countryData.flags) === null || _countryData$flags === void 0 ? void 0 : _countryData$flags.png,\n        alt: `Flag of ${countryData.name.common}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWeatherData,\n      children: \"Capital Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), weatherData && renderWeatherData()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryInfo, \"a45V1ZGoUbBZC6cUzCdwg48HheI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CountryInfo;\nexport default CountryInfo;\n\n// import Button from \"@mui/material/Button\";\n// import { makeStyles } from \"@mui/styles\";\n\n// const backgroundImg='https://images.unsplash.com/photo-1610892415063-d89a504ce049'\n// const useStyles = makeStyles(() => ({\n//   form: {\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     alignItems: \"center\",\n//     marginTop: \"5%\",\n//     marginLeft: \"40%\",\n//     backgroundImage: `url(${backgroundImg})`,\n//     backgroundSize: \"cover\", // Adjust as needed\n//     minHeight: \"80vh\",\n//     width: \"500px\",\n//     justifyContent: \"center\",\n//     padding: 4,\n//   },\n//   input: {\n//     marginBottom: 2,\n//     marginBlockStart: 20,\n//     width: \"300px\",\n//   },\n//   button: {\n//     borderRadius: \"20px\",\n//     marginTop: \"20px\",\n//   },\n// }));\n\n// import React, { useEffect, useState } from \"react\";\n// import { useParams, useNavigate, Link } from \"react-router-dom\";\n// import axios from \"axios\";\n// import Button from \"@mui/material/Button\";\n// import Typography from \"@mui/material/Typography\";\n// import Paper from \"@mui/material/Paper\";\n// import Grid from \"@mui/material/Grid\";\n// import { makeStyles } from \"@mui/styles\";\n\n// const useStyles = makeStyles(() => ({\n//   root: {\n//     flexGrow: 1,\n//     padding: 2,\n//     backgroundImage: `url(https://images.unsplash.com/photo-1610892415063-d89a504ce049)`,\n//     backgroundSize: \"cover\",\n//     minHeight: \"100vh\",\n//   },\n//   paper: {\n//     padding: 3,\n//     textAlign: \"center\",\n//     //color: // theme.palette.text.primary, ////\n//     background: \"rgba(255, 255, 255, 0.8)\",\n//     borderRadius: \"10px\",\n//   },\n//   flagImage: {\n//     maxWidth: \"100%\",\n//     height: \"auto\",\n//     borderRadius: \"8px\",\n//   },\n//   weatherContainer: {\n//     marginTop: 2,\n//     background: \"rgba(255, 255, 255, 0.8)\",\n//     borderRadius: \"10px\",\n//     padding: 3,\n//   },\n//   button: {\n//     borderRadius: \"20px\",\n//     marginTop: \"20px\",\n//     paddingTop: \"10px\",\n//   },\n// }));\n// interface Country {\n//   name?: {\n//     common?: string;\n//     official?: string;\n//   };\n//   capital?: string[];\n//   population?: number;\n//   latlng?: number[];\n//   flags?: {\n//     png?: string;\n//     svg?: string;\n//     alt?: string;\n//   };\n// }\n\n// const CountryInfo = () => {\n//   const { name } = useParams();\n//   const [countryData, setCountryData] = useState<Country>({});\n//   const [weatherData, setWeatherData] = useState<any>({});\n//   const navigate = useNavigate();\n//   const classes = useStyles();\n//   const API_KEY = \"e3736c59809579a0c2080ae39ebc7d67\";\n\n//   useEffect(() => {\n//     const fetchCountryData = async () => {\n//       try {\n//         const response = await fetch(\n//           `https://restcountries.com/v3.1/name/${name}?fullText=true`\n//         );\n//         const data = await response.json();\n//         setCountryData(data[0]);\n//         if (!response.ok) {\n//           alert(\n//             \"Enter Correct Country Name OR Error Occured While Fetching Data\"\n//           );\n//           navigate(`/`);\n//         }\n//       } catch (error) {\n//         console.error(\"Error fetching country data:\", error);\n//       }\n//     };\n\n//     fetchCountryData();\n//   }, [name, navigate]);\n\n//   const fetchWeatherData = async () => {\n//     try {\n//       const response = await axios.get(\n//         `https://api.openweathermap.org/data/2.5/weather?q=${countryData.capital?.[0]}&appid=${API_KEY}`\n//       );\n//       setWeatherData(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching weather data:\", error);\n//     }\n//   };\n\n//   if (!countryData.name) {\n//     return <div>Loading...</div>;\n//   }\n\n//   const renderWeatherData = () => {\n//     return (\n//       <div>\n//         <Grid\n//           container\n//           justifyContent=\"center\"\n//           className={classes.weatherContainer}\n//         >\n//           <Grid item xs={12} sm={8} md={6}>\n//             <Typography variant=\"h5\">Weather Information:</Typography>\n//             <Typography variant=\"body1\">\n//               <strong>Temperature:</strong>{\" \"}\n//               {Math.round(weatherData.main?.temp - 273.15)} Celsius\n//             </Typography>\n//             <Typography variant=\"body1\">\n//               <strong>Wind Speed:</strong> {weatherData.wind?.speed} meter/sec\n//             </Typography>\n//           </Grid>\n//         </Grid>\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div className={classes.root}>\n//       <Grid container justifyContent=\"center\" spacing={2}>\n//         <Grid item xs={12} sm={8} md={6}>\n//           <Paper className={classes.paper}>\n//             <Typography variant=\"h4\">\n//               Welcome to the Country Data\n//               <Link to=\"/\">Home</Link>\n//             </Typography>\n//             <Typography variant=\"h6\">\n//               <strong>Name:</strong> {countryData.name.common}\n//             </Typography>\n//             <Typography variant=\"h6\">\n//               <strong>Capital:</strong> {countryData.capital?.[0]}\n//             </Typography>\n//             <Typography variant=\"h6\">\n//               <strong>Population:</strong> {countryData.population}\n//             </Typography>\n//             <Typography variant=\"h6\">\n//               <strong>Latitude/Longitude:</strong>{\" \"}\n//               {countryData.latlng?.join(\", \")}\n//             </Typography>\n//             <Typography variant=\"h6\">\n//               <strong>Flag:</strong>{\" \"}\n//               <img\n//                 src={countryData.flags?.png}\n//                 alt={`Flag of ${countryData.name.common}`}\n//                 className={classes.flagImage}\n//               />\n//             </Typography>\n//             <Button\n//               variant=\"contained\"\n//               color=\"primary\"\n//               onClick={fetchWeatherData}\n//               className={classes.button}\n//             >\n//               Capital Weather\n//             </Button>\n//           </Paper>\n//         </Grid>\n//       </Grid>\n//       {weatherData && renderWeatherData()}\n//     </div>\n//   );\n// };\n\n// export default CountryInfo;\nvar _c;\n$RefreshReg$(_c, \"CountryInfo\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","useNavigate","Link","jsxDEV","_jsxDEV","CountryInfo","_s","_countryData$capital2","_countryData$latlng","_countryData$flags","name","countryData","setCountryData","weatherData","setWeatherData","navigate","API_KEY","fetchCountryData","response","fetch","data","json","ok","alert","error","console","fetchWeatherData","_countryData$capital","get","capital","log","latlng","children","fileName","_jsxFileName","lineNumber","columnNumber","renderWeatherData","_weatherData$main","_weatherData$wind","main","temp","wind","speed","to","common","population","join","src","flags","png","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sachi/Desktop/Country/mycountrydata/src/CountryInfo.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n// const API_KEY=process.env.REACT_APP_WEATHER_API_KEY\r\ninterface Country {\r\n  name?: {\r\n    common?: string;\r\n    official?: string;\r\n  };\r\n  capital?: string[];\r\n  population?: number;\r\n  latlng?: number[];\r\n  flags?: {\r\n    png?: string;\r\n    svg?: string;\r\n    alt?: string;\r\n  };\r\n}\r\n\r\nconst CountryInfo = () => {\r\n  const { name } = useParams();\r\n  const [countryData, setCountryData] = useState<Country>({});\r\n  const [weatherData, setWeatherData] = useState<any>({});\r\n  const navigate = useNavigate();\r\n  const API_KEY = \"e3736c59809579a0c2080ae39ebc7d67\";\r\n  useEffect(() => {\r\n    const fetchCountryData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://restcountries.com/v3.1/name/${name}?fullText=true`\r\n        );\r\n        const data = await response.json();\r\n        setCountryData(data[0]);\r\n        if (!response.ok) {\r\n          alert(\"Enter Correct Country Name OR Error Occured While Fetching Data\");\r\n          navigate(`/`);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching country data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchCountryData();\r\n  }, [name, navigate]);\r\n\r\n  const fetchWeatherData = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${countryData.capital?.[0]}&appid=${API_KEY}`\r\n      );\r\n      setWeatherData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching weather data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"countryData updated:\", countryData);\r\n    console.log(\"weatherData updated:\", weatherData);\r\n    console.log(\"Api KEys\", API_KEY);\r\n    if (countryData.latlng) {\r\n      fetchWeatherData();\r\n    }\r\n  }, [countryData]);\r\n\r\n  if (!countryData.name) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const renderWeatherData = () => {\r\n    return (\r\n      <div>\r\n        <h2>Weather Information:</h2>\r\n        <p>\r\n          <strong>Temperature:</strong> {weatherData.main?.temp - 273.15} Celsius\r\n        </p>\r\n        <p>\r\n          <strong>Wind Speed:</strong> {weatherData.wind?.speed} meter/sec\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Welcome to the Country Data\r\n        <Link to=\"/\">Home</Link>\r\n      </h1>\r\n\r\n      <p>\r\n        <strong>Name:</strong> {countryData.name.common}\r\n      </p>\r\n      <p>\r\n        <strong>Capital:</strong> {countryData.capital?.[0]}\r\n      </p>\r\n      <p>\r\n        <strong>Population:</strong> {countryData.population}\r\n      </p>\r\n      <p>\r\n        <strong>Latitude/Longitude:</strong> {countryData.latlng?.join(\", \")}\r\n      </p>\r\n      <p>\r\n        <strong>Flag:</strong>{\" \"}\r\n        <img\r\n          src={countryData.flags?.png}\r\n          alt={`Flag of ${countryData.name.common}`}\r\n        />\r\n      </p>\r\n      <button onClick={fetchWeatherData}>Capital Weather</button>\r\n      {weatherData && renderWeatherData()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryInfo;\r\n\r\n// import Button from \"@mui/material/Button\";\r\n// import { makeStyles } from \"@mui/styles\";\r\n\r\n// const backgroundImg='https://images.unsplash.com/photo-1610892415063-d89a504ce049'\r\n// const useStyles = makeStyles(() => ({\r\n//   form: {\r\n//     display: \"flex\",\r\n//     flexDirection: \"column\",\r\n//     alignItems: \"center\",\r\n//     marginTop: \"5%\",\r\n//     marginLeft: \"40%\",\r\n//     backgroundImage: `url(${backgroundImg})`,\r\n//     backgroundSize: \"cover\", // Adjust as needed\r\n//     minHeight: \"80vh\",\r\n//     width: \"500px\",\r\n//     justifyContent: \"center\",\r\n//     padding: 4,\r\n//   },\r\n//   input: {\r\n//     marginBottom: 2,\r\n//     marginBlockStart: 20,\r\n//     width: \"300px\",\r\n//   },\r\n//   button: {\r\n//     borderRadius: \"20px\",\r\n//     marginTop: \"20px\",\r\n//   },\r\n// }));\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { useParams, useNavigate, Link } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import Button from \"@mui/material/Button\";\r\n// import Typography from \"@mui/material/Typography\";\r\n// import Paper from \"@mui/material/Paper\";\r\n// import Grid from \"@mui/material/Grid\";\r\n// import { makeStyles } from \"@mui/styles\";\r\n\r\n// const useStyles = makeStyles(() => ({\r\n//   root: {\r\n//     flexGrow: 1,\r\n//     padding: 2,\r\n//     backgroundImage: `url(https://images.unsplash.com/photo-1610892415063-d89a504ce049)`,\r\n//     backgroundSize: \"cover\",\r\n//     minHeight: \"100vh\",\r\n//   },\r\n//   paper: {\r\n//     padding: 3,\r\n//     textAlign: \"center\",\r\n//     //color: // theme.palette.text.primary, ////\r\n//     background: \"rgba(255, 255, 255, 0.8)\",\r\n//     borderRadius: \"10px\",\r\n//   },\r\n//   flagImage: {\r\n//     maxWidth: \"100%\",\r\n//     height: \"auto\",\r\n//     borderRadius: \"8px\",\r\n//   },\r\n//   weatherContainer: {\r\n//     marginTop: 2,\r\n//     background: \"rgba(255, 255, 255, 0.8)\",\r\n//     borderRadius: \"10px\",\r\n//     padding: 3,\r\n//   },\r\n//   button: {\r\n//     borderRadius: \"20px\",\r\n//     marginTop: \"20px\",\r\n//     paddingTop: \"10px\",\r\n//   },\r\n// }));\r\n// interface Country {\r\n//   name?: {\r\n//     common?: string;\r\n//     official?: string;\r\n//   };\r\n//   capital?: string[];\r\n//   population?: number;\r\n//   latlng?: number[];\r\n//   flags?: {\r\n//     png?: string;\r\n//     svg?: string;\r\n//     alt?: string;\r\n//   };\r\n// }\r\n\r\n// const CountryInfo = () => {\r\n//   const { name } = useParams();\r\n//   const [countryData, setCountryData] = useState<Country>({});\r\n//   const [weatherData, setWeatherData] = useState<any>({});\r\n//   const navigate = useNavigate();\r\n//   const classes = useStyles();\r\n//   const API_KEY = \"e3736c59809579a0c2080ae39ebc7d67\";\r\n\r\n//   useEffect(() => {\r\n//     const fetchCountryData = async () => {\r\n//       try {\r\n//         const response = await fetch(\r\n//           `https://restcountries.com/v3.1/name/${name}?fullText=true`\r\n//         );\r\n//         const data = await response.json();\r\n//         setCountryData(data[0]);\r\n//         if (!response.ok) {\r\n//           alert(\r\n//             \"Enter Correct Country Name OR Error Occured While Fetching Data\"\r\n//           );\r\n//           navigate(`/`);\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching country data:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchCountryData();\r\n//   }, [name, navigate]);\r\n\r\n//   const fetchWeatherData = async () => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `https://api.openweathermap.org/data/2.5/weather?q=${countryData.capital?.[0]}&appid=${API_KEY}`\r\n//       );\r\n//       setWeatherData(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching weather data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   if (!countryData.name) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   const renderWeatherData = () => {\r\n//     return (\r\n//       <div>\r\n//         <Grid\r\n//           container\r\n//           justifyContent=\"center\"\r\n//           className={classes.weatherContainer}\r\n//         >\r\n//           <Grid item xs={12} sm={8} md={6}>\r\n//             <Typography variant=\"h5\">Weather Information:</Typography>\r\n//             <Typography variant=\"body1\">\r\n//               <strong>Temperature:</strong>{\" \"}\r\n//               {Math.round(weatherData.main?.temp - 273.15)} Celsius\r\n//             </Typography>\r\n//             <Typography variant=\"body1\">\r\n//               <strong>Wind Speed:</strong> {weatherData.wind?.speed} meter/sec\r\n//             </Typography>\r\n//           </Grid>\r\n//         </Grid>\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <Grid container justifyContent=\"center\" spacing={2}>\r\n//         <Grid item xs={12} sm={8} md={6}>\r\n//           <Paper className={classes.paper}>\r\n//             <Typography variant=\"h4\">\r\n//               Welcome to the Country Data\r\n//               <Link to=\"/\">Home</Link>\r\n//             </Typography>\r\n//             <Typography variant=\"h6\">\r\n//               <strong>Name:</strong> {countryData.name.common}\r\n//             </Typography>\r\n//             <Typography variant=\"h6\">\r\n//               <strong>Capital:</strong> {countryData.capital?.[0]}\r\n//             </Typography>\r\n//             <Typography variant=\"h6\">\r\n//               <strong>Population:</strong> {countryData.population}\r\n//             </Typography>\r\n//             <Typography variant=\"h6\">\r\n//               <strong>Latitude/Longitude:</strong>{\" \"}\r\n//               {countryData.latlng?.join(\", \")}\r\n//             </Typography>\r\n//             <Typography variant=\"h6\">\r\n//               <strong>Flag:</strong>{\" \"}\r\n//               <img\r\n//                 src={countryData.flags?.png}\r\n//                 alt={`Flag of ${countryData.name.common}`}\r\n//                 className={classes.flagImage}\r\n//               />\r\n//             </Typography>\r\n//             <Button\r\n//               variant=\"contained\"\r\n//               color=\"primary\"\r\n//               onClick={fetchWeatherData}\r\n//               className={classes.button}\r\n//             >\r\n//               Capital Weather\r\n//             </Button>\r\n//           </Paper>\r\n//         </Grid>\r\n//       </Grid>\r\n//       {weatherData && renderWeatherData()}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CountryInfo;\r\n"],"mappings":"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EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}