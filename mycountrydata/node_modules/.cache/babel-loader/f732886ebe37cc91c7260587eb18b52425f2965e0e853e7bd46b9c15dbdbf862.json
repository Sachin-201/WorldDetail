{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sachi\\\\Desktop\\\\Country\\\\mycountrydata\\\\src\\\\CountryInfo.tsx\",\n  _s = $RefreshSig$();\n// // import { useNavigate } from \"react-router-dom\";\n// // import \"./global.css\";\n// // import { useState } from \"react\";\n\n// // const Form = () => function Form() {\n// //     return (\n\n// // )\n// // }\n\n// // export default Form;\n\n// import React from 'react';\n\n// interface Props {\n//   data: {\n//     name: string;\n//     capital: string;\n//     population: number;\n//     latlng: [number, number];\n//     flag: string;\n//   };\n// }\n\n// const CountryInfo: React.FC<Props> = ({ data }) => {\n//   return (\n//     <div>\n//       <h1>{data.name}</h1>\n//       <p>Capital: {data.capital}</p>\n//       <p>Population: {data.population}</p>\n//       <p>Lat/Lng: {data.latlng.join(', ')}</p>\n//       <img src={data.flag} alt={`Flag of ${data.name}`} />\n//       {/* Add weather button and functionality here */}\n//     </div>\n//   );\n// };\n\n// export default CountryInfo;\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryInfo = () => {\n  _s();\n  const {\n    name\n  } = useParams();\n  const [countryData, setCountryData] = useState(null);\n  const [weatherData, setWeatherData] = useState(null);\n  useEffect(() => {\n    const fetchCountryData = async () => {\n      const response = await axios.get(`https://restcountries.eu/rest/v2/name/${name}`);\n      setCountryData(response.data[0]);\n    };\n    fetchCountryData();\n  }, [name]);\n  const fetchWeatherData = async () => {\n    // Replace with your weather API URL\n    const response = await axios.get(`https://api.weatherapi.com/v1/current.json?key=YOUR_API_KEY&q=${countryData.capital}`);\n    setWeatherData(response.data);\n  };\n  if (!countryData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: countryData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Capital: \", countryData.capital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Population: \", countryData.population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Lat/Lng: \", countryData.latlng.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: countryData.flag,\n      alt: `Flag of ${countryData.name}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWeatherData,\n      children: \"Capital Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Weather: \", weatherData.current.condition.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryInfo, \"FyIWNzkjwhD+rwOYWK2LMMY9zjQ=\", false, function () {\n  return [useParams];\n});\n_c = CountryInfo;\nexport default CountryInfo;\nvar _c;\n$RefreshReg$(_c, \"CountryInfo\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","CountryInfo","_s","name","countryData","setCountryData","weatherData","setWeatherData","fetchCountryData","response","get","data","fetchWeatherData","capital","children","fileName","_jsxFileName","lineNumber","columnNumber","population","latlng","join","src","flag","alt","onClick","current","condition","text","_c","$RefreshReg$"],"sources":["C:/Users/sachi/Desktop/Country/mycountrydata/src/CountryInfo.tsx"],"sourcesContent":["// // import { useNavigate } from \"react-router-dom\";\r\n// // import \"./global.css\";\r\n// // import { useState } from \"react\";\r\n\r\n// // const Form = () => function Form() {\r\n// //     return (\r\n        \r\n// // )\r\n// // }\r\n\r\n\r\n// // export default Form;\r\n\r\n// import React from 'react';\r\n\r\n// interface Props {\r\n//   data: {\r\n//     name: string;\r\n//     capital: string;\r\n//     population: number;\r\n//     latlng: [number, number];\r\n//     flag: string;\r\n//   };\r\n// }\r\n\r\n// const CountryInfo: React.FC<Props> = ({ data }) => {\r\n//   return (\r\n//     <div>\r\n//       <h1>{data.name}</h1>\r\n//       <p>Capital: {data.capital}</p>\r\n//       <p>Population: {data.population}</p>\r\n//       <p>Lat/Lng: {data.latlng.join(', ')}</p>\r\n//       <img src={data.flag} alt={`Flag of ${data.name}`} />\r\n//       {/* Add weather button and functionality here */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CountryInfo;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst CountryInfo = () => {\r\n  const { name } = useParams();\r\n  const [countryData, setCountryData] = useState(null);\r\n  const [weatherData, setWeatherData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCountryData = async () => {\r\n      const response = await axios.get(`https://restcountries.eu/rest/v2/name/${name}`);\r\n      setCountryData(response.data[0]);\r\n    };\r\n\r\n    fetchCountryData();\r\n  }, [name]);\r\n\r\n  const fetchWeatherData = async () => {\r\n    // Replace with your weather API URL\r\n    const response = await axios.get(`https://api.weatherapi.com/v1/current.json?key=YOUR_API_KEY&q=${countryData.capital}`);\r\n    setWeatherData(response.data);\r\n  };\r\n\r\n  if (!countryData) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{countryData.name}</h1>\r\n      <p>Capital: {countryData.capital}</p>\r\n      <p>Population: {countryData.population}</p>\r\n      <p>Lat/Lng: {countryData.latlng.join(', ')}</p>\r\n      <img src={countryData.flag} alt={`Flag of ${countryData.name}`} />\r\n      <button onClick={fetchWeatherData}>Capital Weather</button>\r\n      {weatherData && <div>Weather: {weatherData.current.condition.text}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryInfo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}