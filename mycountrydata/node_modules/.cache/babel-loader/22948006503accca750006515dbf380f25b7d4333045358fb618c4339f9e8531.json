{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sachi\\\\Desktop\\\\Country\\\\mycountrydata\\\\src\\\\CountryInfo.tsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import { Link } from 'react-router-dom';\n\n// const CountryInfo = () => {\n//   const { name } = useParams();\n//   const [countryData, setCountryData] = useState<Country>({});\n//   const [weatherData, setWeatherData] = useState({});\n//   const navigate = useNavigate();\n\n//   interface Country {\n//     name?: {\n//       common?: string;\n//       official?: string;\n//     };\n//     capital?: string[];\n//     population?: number;\n//     latlng?: number[];\n//     flags?: {\n//       png?: string;\n//       svg?: string;\n//       alt?: string;\n//     };\n//   }\n\n//   useEffect(() => {\n//     const fetchCountryData = async () => {\n//         try {\n//           const response = await fetch(`https://restcountries.com/v3.1/name/${name}?fullText=true`);\n//           const data = await response.json();\n//           setCountryData(data[0]);\n//          // console.log(\"country data after seting data \", countryData)\n//           if (!response.ok) {\n//             alert(\"Enter Correct Country Name\");\n//             navigate(`/`);\n//           }\n//         } catch (error) {\n//           console.error(\"Error fetching country data:\", error);\n//         }\n//       };      \n//     fetchCountryData();\n//   }, [name]);\n\n//   const fetchWeatherData = async () => {\n//     try {\n//      // const response = await axios.get(`https://api.weatherapi.com/v1/current.json?key=YOUR_API_KEY&q=${countryData.capital?.[0]}`);\n//     //  const response= await axios.get(`https://api.weatherapi.com/v1/current.json?key=YOUR_API_KEY&q=${countryData.capital?.[0]}`);\n//      //    https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={API key}\n//     //  latlng\n//     //  setWeatherData(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching weather data:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     console.log(\"countryData updated:\", countryData);\n//     console.log(\"COuntry name\",countryData.name?.common )\n//   }, [countryData]);\n\n//   if (!countryData) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//         <h1> Welcome to thec Country Data\n\n//         <Link to=\"/\" >            Home          </Link>\n\n//         </h1>\n\n//       <h1>{countryData.name?.common}</h1>\n//       <h1>{countryData.name?.official}</h1>\n//       <p>Capital: {countryData.capital}</p>\n//       <p>Population: {countryData.population}</p>\n//       {/* <p>Lat/Lng: {countryData.latlng.join(', ')}</p> */}\n//       <strong>Latitude/Longitude:</strong> {countryData.latlng?.join(', ')}\n\n//       <img src={countryData.flags?.png} alt={`Flag of ${countryData.name}`} />\n//       <button onClick={fetchWeatherData}>Capital Weather</button>\n\n//        {/* {weatherData && <div>Weather: {weatherData.current.condition.text}</div>} \n//            */}\n// {/* \n//       Temparature and Windspeed */}\n//     </div>\n//   );\n// };\n\n// export default CountryInfo;\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryInfo = () => {\n  _s();\n  var _countryData$capital2, _countryData$latlng, _countryData$flags;\n  const {\n    name\n  } = useParams();\n  const [countryData, setCountryData] = useState({});\n  const [weatherData, setWeatherData] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchCountryData = async () => {\n      try {\n        const response = await fetch(`https://restcountries.com/v3.1/name/${name}?fullText=true`);\n        const data = await response.json();\n        setCountryData(data[0]);\n        if (!response.ok) {\n          alert(\"Enter Correct Country Name\");\n          navigate(`/`);\n        }\n      } catch (error) {\n        console.error(\"Error fetching country data:\", error);\n      }\n    };\n    fetchCountryData();\n  }, [name, navigate]);\n  const fetchWeatherData = async () => {\n    try {\n      var _countryData$capital;\n      // Replace 'YOUR_API_KEY' with your actual weather API key\n      const response = await axios.get(`https://api.weatherapi.com/v1/current.json?key=YOUR_API_KEY&q=${(_countryData$capital = countryData.capital) === null || _countryData$capital === void 0 ? void 0 : _countryData$capital[0]}`);\n      setWeatherData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n    }\n  };\n  useEffect(() => {\n    console.log(\"countryData updated:\", countryData);\n  }, [countryData]);\n  if (!countryData.name) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome to the Country Data\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), \" \", countryData.name.common]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Capital:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), \" \", (_countryData$capital2 = countryData.capital) === null || _countryData$capital2 === void 0 ? void 0 : _countryData$capital2[0]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Population:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), \" \", countryData.population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Latitude/Longitude:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), \" \", (_countryData$latlng = countryData.latlng) === null || _countryData$latlng === void 0 ? void 0 : _countryData$latlng.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Flag:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: (_countryData$flags = countryData.flags) === null || _countryData$flags === void 0 ? void 0 : _countryData$flags.png,\n        alt: `Flag of ${countryData.name.common}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWeatherData,\n      children: \"Capital Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Weather: \", weatherData.current.condition.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryInfo, \"a45V1ZGoUbBZC6cUzCdwg48HheI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CountryInfo;\nexport default CountryInfo;\nvar _c;\n$RefreshReg$(_c, \"CountryInfo\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","useNavigate","Link","jsxDEV","_jsxDEV","CountryInfo","_s","_countryData$capital2","_countryData$latlng","_countryData$flags","name","countryData","setCountryData","weatherData","setWeatherData","navigate","fetchCountryData","response","fetch","data","json","ok","alert","error","console","fetchWeatherData","_countryData$capital","get","capital","log","children","fileName","_jsxFileName","lineNumber","columnNumber","to","common","population","latlng","join","src","flags","png","alt","onClick","current","condition","text","_c","$RefreshReg$"],"sources":["C:/Users/sachi/Desktop/Country/mycountrydata/src/CountryInfo.tsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// const CountryInfo = () => {\r\n//   const { name } = useParams();\r\n//   const [countryData, setCountryData] = useState<Country>({});\r\n//   const [weatherData, setWeatherData] = useState({});\r\n//   const navigate = useNavigate();\r\n\r\n//   interface Country {\r\n//     name?: {\r\n//       common?: string;\r\n//       official?: string;\r\n//     };\r\n//     capital?: string[];\r\n//     population?: number;\r\n//     latlng?: number[];\r\n//     flags?: {\r\n//       png?: string;\r\n//       svg?: string;\r\n//       alt?: string;\r\n//     };\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     const fetchCountryData = async () => {\r\n//         try {\r\n//           const response = await fetch(`https://restcountries.com/v3.1/name/${name}?fullText=true`);\r\n//           const data = await response.json();\r\n//           setCountryData(data[0]);\r\n//          // console.log(\"country data after seting data \", countryData)\r\n//           if (!response.ok) {\r\n//             alert(\"Enter Correct Country Name\");\r\n//             navigate(`/`);\r\n//           }\r\n//         } catch (error) {\r\n//           console.error(\"Error fetching country data:\", error);\r\n//         }\r\n//       };      \r\n//     fetchCountryData();\r\n//   }, [name]);\r\n\r\n//   const fetchWeatherData = async () => {\r\n//     try {\r\n//      // const response = await axios.get(`https://api.weatherapi.com/v1/current.json?key=YOUR_API_KEY&q=${countryData.capital?.[0]}`);\r\n//     //  const response= await axios.get(`https://api.weatherapi.com/v1/current.json?key=YOUR_API_KEY&q=${countryData.capital?.[0]}`);\r\n//      //    https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={API key}\r\n//     //  latlng\r\n//     //  setWeatherData(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching weather data:\", error);\r\n//     }\r\n//   };\r\n\r\n\r\n//   useEffect(() => {\r\n//     console.log(\"countryData updated:\", countryData);\r\n//     console.log(\"COuntry name\",countryData.name?.common )\r\n//   }, [countryData]);\r\n  \r\n\r\n//   if (!countryData) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//         <h1> Welcome to thec Country Data\r\n\r\n//         <Link to=\"/\" >            Home          </Link>\r\n\r\n//         </h1>\r\n    \r\n       \r\n//       <h1>{countryData.name?.common}</h1>\r\n//       <h1>{countryData.name?.official}</h1>\r\n//       <p>Capital: {countryData.capital}</p>\r\n//       <p>Population: {countryData.population}</p>\r\n//       {/* <p>Lat/Lng: {countryData.latlng.join(', ')}</p> */}\r\n//       <strong>Latitude/Longitude:</strong> {countryData.latlng?.join(', ')}\r\n\r\n//       <img src={countryData.flags?.png} alt={`Flag of ${countryData.name}`} />\r\n//       <button onClick={fetchWeatherData}>Capital Weather</button>\r\n   \r\n//        {/* {weatherData && <div>Weather: {weatherData.current.condition.text}</div>} \r\n//            */}\r\n// {/* \r\n//       Temparature and Windspeed */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CountryInfo;\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Country {\r\n  name?: {\r\n    common?: string;\r\n    official?: string;\r\n    nativeName?: {\r\n      eng?: {\r\n        common?: string;\r\n        official?: string;\r\n      };\r\n      hin?: {\r\n        common?: string;\r\n        official?: string;\r\n      };\r\n      tam?: {\r\n        common?: string;\r\n        official?: string;\r\n      };\r\n      // Add more languages as needed\r\n    };\r\n  };\r\n  capital?: string[];\r\n  population?: number;\r\n  latlng?: number[];\r\n  flags?: {\r\n    png?: string;\r\n    svg?: string;\r\n    alt?: string;\r\n  };\r\n}\r\n\r\nconst CountryInfo = () => {\r\n  const { name } = useParams();\r\n  const [countryData, setCountryData] = useState<Country>({});\r\n  const [weatherData, setWeatherData] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchCountryData = async () => {\r\n      try {\r\n        const response = await fetch(`https://restcountries.com/v3.1/name/${name}?fullText=true`);\r\n        const data = await response.json();\r\n        setCountryData(data[0]);\r\n\r\n        if (!response.ok) {\r\n          alert(\"Enter Correct Country Name\");\r\n          navigate(`/`);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching country data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchCountryData();\r\n  }, [name, navigate]);\r\n\r\n  const fetchWeatherData = async () => {\r\n    try {\r\n      // Replace 'YOUR_API_KEY' with your actual weather API key\r\n      const response = await axios.get(`https://api.weatherapi.com/v1/current.json?key=YOUR_API_KEY&q=${countryData.capital?.[0]}`);\r\n      setWeatherData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching weather data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"countryData updated:\", countryData);\r\n  }, [countryData]);\r\n\r\n  if (!countryData.name) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Welcome to the Country Data\r\n        <Link to=\"/\">Home</Link>\r\n      </h1>\r\n\r\n      <p>\r\n        <strong>Name:</strong> {countryData.name.common}\r\n      </p>\r\n      <p>\r\n        <strong>Capital:</strong> {countryData.capital?.[0]}\r\n      </p>\r\n      <p>\r\n        <strong>Population:</strong> {countryData.population}\r\n      </p>\r\n      <p>\r\n        <strong>Latitude/Longitude:</strong> {countryData.latlng?.join(', ')}\r\n      </p>\r\n      <p>\r\n        <strong>Flag:</strong> <img src={countryData.flags?.png} alt={`Flag of ${countryData.name.common}`} />\r\n      </p>\r\n\r\n      <button onClick={fetchWeatherData}>Capital Weather</button>\r\n\r\n      {/* Render weatherData if available */}\r\n      {weatherData && <div>Weather: {weatherData.current.condition.text}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryInfo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}