{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sachi\\\\Desktop\\\\Country\\\\mycountrydata\\\\src\\\\CountryInfo.tsx\",\n  _s = $RefreshSig$();\n// // import { useNavigate } from \"react-router-dom\";\n// // import \"./global.css\";\n// // import { useState } from \"react\";\n\n// // const Form = () => function Form() {\n// //     return (\n\n// // )\n// // }\n\n// // export default Form;\n\n// import React from 'react';\n\n// interface Props {\n//   data: {\n//     name: string;\n//     capital: string;\n//     population: number;\n//     latlng: [number, number];\n//     flag: string;\n//   };\n// }\n\n// const CountryInfo: React.FC<Props> = ({ data }) => {\n//   return (\n//     <div>\n//       <h1>{data.name}</h1>\n//       <p>Capital: {data.capital}</p>\n//       <p>Population: {data.population}</p>\n//       <p>Lat/Lng: {data.latlng.join(', ')}</p>\n//       <img src={data.flag} alt={`Flag of ${data.name}`} />\n//       {/* Add weather button and functionality here */}\n//     </div>\n//   );\n// };\n\n// export default CountryInfo;\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryInfo = () => {\n  _s();\n  const {\n    name\n  } = useParams();\n  const [countryData, setCountryData] = useState(null);\n  const [weatherData, setWeatherData] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchCountryData = async () => {\n      console.log(\"name of the country is \" + name);\n      //const response = await axios.get(`https://restcountries.com/v3.1/name/${name}`);\n      const response = await fetch(`https://restcountries.com/v3.1/name/${name}`);\n      //   let response = await fetch(`https://restcountries.com/v3.1/name/india`);\n      console.log(\"Data type is as follloe \", response);\n      //response=JSON.parse(response);\n      //   console.log(\"Datat inside the use effect call \"+ response)\n      setCountryData(response);\n      //   const stringd=JSON.stringify(response);\n      //   console.log(\"Stringfy data is \"  +stringd)\n      //   console.log(\"Data type is as follloe \"+ typeof(countryData))\n      //     console.log(\"Response is true or false \"+response.ok)\n      //   console.log(\"Datat inside the use effect call after set data \"+ countryData)\n\n      if (!response.ok) {\n        console.log(\"Inside the if condition Enter Corrrecct Country Naeme\");\n        alert(\"Enter Correct Country Name\");\n        navigate(`/`);\n      }\n    };\n    fetchCountryData();\n  }, [name]);\n  const fetchWeatherData = async () => {\n    // Replace with your weather API URL\n    // const response = await axios.get(`https://api.weatherapi.com/v1/current.json?key=YOUR_API_KEY&q=${countryData.capital}`);\n    //    const response = await axios.get(`https://restcountries.com/v3.1/name/${name}`);\n    let response = await axios.get(`https://restcountries.com/v3.1/name/india`);\n    console.log(\"Datat inside the fetcg api \" + response);\n    setWeatherData(response.data);\n    console.log(\"Datat inside the fetcg api after set data \" + response.data[0]);\n  };\n  if (!countryData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" Welcome to thec Country Data\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"            Home          \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: countryData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Capital: \", countryData.capital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Population: \", countryData.population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Lat/Lng: \", countryData.latlng.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: countryData.flag,\n      alt: `Flag of ${countryData.name}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWeatherData,\n      children: \"Capital Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryInfo, \"d5C4marqxihiyl+55IT4nPliw90=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CountryInfo;\nexport default CountryInfo;\nvar _c;\n$RefreshReg$(_c, \"CountryInfo\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","useNavigate","Link","jsxDEV","_jsxDEV","CountryInfo","_s","name","countryData","setCountryData","weatherData","setWeatherData","navigate","fetchCountryData","console","log","response","fetch","ok","alert","fetchWeatherData","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","to","capital","population","latlng","join","src","flag","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sachi/Desktop/Country/mycountrydata/src/CountryInfo.tsx"],"sourcesContent":["// // import { useNavigate } from \"react-router-dom\";\r\n// // import \"./global.css\";\r\n// // import { useState } from \"react\";\r\n\r\n// // const Form = () => function Form() {\r\n// //     return (\r\n        \r\n// // )\r\n// // }\r\n\r\n\r\n// // export default Form;\r\n\r\n// import React from 'react';\r\n\r\n// interface Props {\r\n//   data: {\r\n//     name: string;\r\n//     capital: string;\r\n//     population: number;\r\n//     latlng: [number, number];\r\n//     flag: string;\r\n//   };\r\n// }\r\n\r\n// const CountryInfo: React.FC<Props> = ({ data }) => {\r\n//   return (\r\n//     <div>\r\n//       <h1>{data.name}</h1>\r\n//       <p>Capital: {data.capital}</p>\r\n//       <p>Population: {data.population}</p>\r\n//       <p>Lat/Lng: {data.latlng.join(', ')}</p>\r\n//       <img src={data.flag} alt={`Flag of ${data.name}`} />\r\n//       {/* Add weather button and functionality here */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CountryInfo;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CountryInfo = () => {\r\n  const { name } = useParams();\r\n  const [countryData, setCountryData] = useState(null);\r\n  const [weatherData, setWeatherData] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchCountryData = async () => {\r\n        console.log(\"name of the country is \"+ name)\r\n      //const response = await axios.get(`https://restcountries.com/v3.1/name/${name}`);\r\n      const response = await fetch(`https://restcountries.com/v3.1/name/${name}`);\r\n    //   let response = await fetch(`https://restcountries.com/v3.1/name/india`);\r\n        console.log(\"Data type is as follloe \",response)\r\n      //response=JSON.parse(response);\r\n    //   console.log(\"Datat inside the use effect call \"+ response)\r\n      setCountryData(response);\r\n    //   const stringd=JSON.stringify(response);\r\n    //   console.log(\"Stringfy data is \"  +stringd)\r\n    //   console.log(\"Data type is as follloe \"+ typeof(countryData))\r\n    //     console.log(\"Response is true or false \"+response.ok)\r\n    //   console.log(\"Datat inside the use effect call after set data \"+ countryData)\r\n\r\n      if(!response.ok)\r\n      {\r\n        console.log(\"Inside the if condition Enter Corrrecct Country Naeme\")\r\n        alert(\"Enter Correct Country Name\")\r\n        navigate(`/`);\r\n\r\n      }\r\n   };\r\n    fetchCountryData();\r\n  }, [name]);\r\n\r\n  const fetchWeatherData = async () => {\r\n    // Replace with your weather API URL\r\n   // const response = await axios.get(`https://api.weatherapi.com/v1/current.json?key=YOUR_API_KEY&q=${countryData.capital}`);\r\n//    const response = await axios.get(`https://restcountries.com/v3.1/name/${name}`);\r\n        let response = await axios.get(`https://restcountries.com/v3.1/name/india`);\r\n\r\n   console.log(\"Datat inside the fetcg api \"+ response)\r\n    setWeatherData(response.data);\r\n    console.log(\"Datat inside the fetcg api after set data \"+ response.data[0])\r\n  };\r\n\r\n  if (!countryData) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <h1> Welcome to thec Country Data\r\n\r\n        <Link to=\"/\" >            Home          </Link>\r\n\r\n        </h1>\r\n        {/* console.log(\"Country data\"+ {countryData}) */}\r\n       \r\n      <h1>{countryData.name}</h1>\r\n      <p>Capital: {countryData.capital}</p>\r\n      <p>Population: {countryData.population}</p>\r\n      <p>Lat/Lng: {countryData.latlng.join(', ')}</p>\r\n      <img src={countryData.flag} alt={`Flag of ${countryData.name}`} />\r\n      <button onClick={fetchWeatherData}>Capital Weather</button>\r\n      {/* console.log(\"Weather ddata \"+ {weatherData}) */}\r\n\r\n      {/* {weatherData && <div>Weather: {weatherData.current.condition.text}</div>} */}\r\n            \r\n{/* \r\n      Temparature and Windspeed */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryInfo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}